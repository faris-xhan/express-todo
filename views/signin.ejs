<section id="hero" class="hero d-flex align-items-center">
   <div class="container">
      <div class="row">
         <div class="col-lg-6 d-flex flex-column justify-content-center">
            <form
               action="/signin"
               method="post"
               id="sign-in-form"
               class="needs-validation"
               novalidate
            >
               <div class="form-group">
                  <label for="email">Email address</label>
                  <input
                     type="email"
                     name="email"
                     class="form-control"
                     id="email"
                     aria-describedby="emailHelp"
                     placeholder="Enter email"
                     required
                  />
                  <small id="emailHelp" class="form-text text-muted"
                     >We'll never share your email with anyone else.</small
                  >
               </div>
               <div class="form-group">
                  <label for="password">Password</label>
                  <input
                     type="password"
                     name="password"
                     class="form-control"
                     id="password"
                     placeholder="Password"
                     required
                  />
               </div>

               <button type="submit" class="btn btn-primary">Submit</button>
            </form>
         </div>
         <div
            class="col-lg-6 hero-img"
            data-aos="zoom-out"
            data-aos-delay="200"
         >
            <img src="/images/hero-banner.svg" class="img-fluid" alt="" />
         </div>
      </div>
   </div>
   <script>
      // Example starter JavaScript for disabling form submissions if there are invalid fields
      (function () {
         "use strict";
         window.addEventListener(
            "load",
            function () {
               // Fetch all the forms we want to apply custom Bootstrap validation styles to
               var forms = document.getElementsByClassName("needs-validation");
               // Loop over them and prevent submission
               var validation = Array.prototype.filter.call(
                  forms,
                  function (form) {
                     form.addEventListener(
                        "submit",
                        function (event) {
                           if (form.checkValidity() === false) {
                              event.preventDefault();
                              event.stopPropagation();
                           }
                           form.classList.add("was-validated");
                        },
                        false
                     );
                  }
               );
            },
            false
         );
      })();
      const signIn = document.getElementById("sign-in-form");
      const email = document.getElementById("email");
      const password = document.getElementById("password");
      const loginButton = signIn.querySelector('button[type="submit"]');

      const handleSignIn = async (email, password) => {
         const r = await fetch("/signin", {
            method: "POST",
            headers: {
               Accept: "application/json",
               "Content-Type": "application/json",
            },
            body: JSON.stringify({
               email,
               password,
            }),
         });

         const data = await r.json();
         console.log(data);
      };

      signIn.onsubmit = (event) => {
         event.preventDefault();
         loginButton.disable = true;
         if (signIn.checkValidity()) {
            handleSignIn(email.value, password.value);
         }
         loginButton.disable = false;
      };
   </script>
</section>
