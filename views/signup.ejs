<section id="hero" class="hero d-flex align-items-center">
   <div class="container">
      <div class="row">
         <div class="col-lg-6 d-flex flex-column justify-content-center">
            <form
               class="needs-validation"
               novalidate
               method="POST"
               id="signup-form"
            >
               <div
                  class="alert alert-danger"
                  role="alert"
                  id="incorrect-alert"
                  hidden
               >
                  Please provide correct information.
               </div>
               <div class="form-row">
                  <div class="col-md-6 mb-2">
                     <label for="first-name">First name</label>
                     <input
                        type="text"
                        class="form-control"
                        id="first-name"
                        placeholder="First name"
                        name="fname"
                        required
                     />
                     <div class="valid-feedback">Looks good!</div>
                  </div>
                  <div class="col-md-6 mb-2">
                     <label for="last-name">Last name</label>
                     <input
                        type="text"
                        class="form-control"
                        id="last-name"
                        placeholder="Last name"
                        name="lname"
                        required
                     />
                     <div class="valid-feedback">Looks good!</div>
                  </div>
               </div>
               <div class="form-row">
                  <div class="col-md-6 mb-2">
                     <label for="email">Email</label>
                     <input
                        type="email"
                        pattern="[a-z0-9._%+-]+@[a-z0-9.-]+\.[a-z]{2,4}$"
                        class="form-control"
                        id="email"
                        placeholder="Email"
                        name="email"
                        required
                     />
                     <small class="invalid-feedback">
                        Please provie a valid email address.
                     </small>
                  </div>
                  <div class="col-md-6 mb-2">
                     <label for="password">Password</label>
                     <input
                        type="password"
                        class="form-control"
                        id="password"
                        minlength="8"
                        placeholder="Password"
                        name="password"
                        required
                     />
                     <small class="invalid-feedback">
                        Password must be atleast 8 character long.
                     </small>
                  </div>
               </div>

               <button class="btn btn-primary" type="submit">Sign Up</button>
            </form>
         </div>
         <div
            class="col-lg-6 hero-img"
            data-aos="zoom-out"
            data-aos-delay="200"
         >
            <img src="/images/hero-banner.svg" class="img-fluid" alt="" />
         </div>
      </div>
   </div>
   <script>
      // Example starter JavaScript for disabling form submissions if there are invalid fields
      (function () {
         "use strict";
         window.addEventListener(
            "load",
            function () {
               // Fetch all the forms we want to apply custom Bootstrap validation styles to
               var forms = document.getElementsByClassName("needs-validation");
               // Loop over them and prevent submission
               var validation = Array.prototype.filter.call(
                  forms,
                  function (form) {
                     form.addEventListener(
                        "submit",
                        function (event) {
                           if (form.checkValidity() === false) {
                              event.preventDefault();
                              event.stopPropagation();
                           }
                           form.classList.add("was-validated");
                        },
                        false
                     );
                  }
               );
            },
            false
         );
      })();
      const signup = document.getElementById("signup-form");
      const fname = document.getElementById("first-name");
      const lname = document.getElementById("last-name");
      const email = document.getElementById("email");
      const password = document.getElementById("password");
      const signUpButton = signup.querySelector('button[type="submit"]');

      const handleSignIn = async (formData) => {
         const r = await fetch("/signup", {
            method: "POST",
            headers: {
               Accept: "application/json",
               "Content-Type": "application/json",
            },
            body: JSON.stringify(formData),
         });

         if (r.ok) {
            const data = await r.json();
            console.log(data);
         } else {
            const incorrectAlert = document.getElementById("incorrect-alert");
            incorrectAlert.hidden = false;
         }
      };

      signup.onsubmit = (event) => {
         event.preventDefault();
         signUpButton.disabled = true;
         if (signup.checkValidity()) {
            handleSignIn({
               fname: fname.value,
               lname: lname.value,
               email: email.value,
               password: password.value,
            });
         }
         signUpButton.disabled = false;
      };
   </script>
</section>
